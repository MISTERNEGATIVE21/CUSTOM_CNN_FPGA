//Numpy array shape [256]
//Min 0.000000000000
//Max 0.000000000000
//Number of zeros 256

#ifndef B90_H_
#define B90_H_

#ifndef __SYNTHESIS__
model_default_t b90[256];
#else
model_default_t b90[256] = {};

#endif

#endif
